/* RM */
const _std = _process.std;
const _path = _process.$path;

_initialize = async () => {
    const fs = await _import("libs/fs");
    const { buildPath, isAbsolute } = await _import("libs/path");
    
    const attrPath = _process.__attributes?.[0] || false;

    let path = _path;
    if (attrPath) {
        path = isAbsolute(attrPath) ? attrPath : buildPath([attrPath], _path);
    }

    const isFile = await fs.isFile(path);
    const isDir = await fs.isDir(path);
    let error = false;

    if (isFile) {
        const res = await fs.rmFile(path);
        if (res === false) { error = "Can't remove file"+path; }
    } else if (isDir) {
        const res = await fs.rmDir(path);
        if (res === false) { error = "Can't remove dir "+path; }
    } else {
        error = "Unfined path "+path;
    };

    if (error) { _std.write(error);}

    _process.exit();
}